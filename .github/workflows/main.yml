name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install
        working-directory: miniprojetoantoniosousa  # Atualiza para o caminho correto

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx
        working-directory: miniprojeto/miniprojetoantoniosousa

      - name: Check code formatting
        run: npx prettier --check .
        working-directory: miniprojeto/miniprojetoantoniosousa

      - name: Run Unit Tests
        run: npx jest --coverage --passWithNoTests
        working-directory: miniprojeto/miniprojetoantoniosousa

      - name: Build Project
        run: npx next build
        working-directory: miniprojeto/miniprojetoantoniosousa
        env: 
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}

  deploy:
    needs: build  # Garantir que o job de build conclua antes do deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install
        working-directory: miniprojeto/miniprojetoantoniosousa

      - name: Deploy to Vercel
        run: npx vercel --prod --token 'prj_jqwCcT3NhdhmqMI5djJx9zEUerHS'
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: miniprojeto/miniprojetoantoniosousa
